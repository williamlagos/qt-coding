CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(zhockon)

SET(DEPDIR "${CMAKE_CURRENT_SOURCE_DIR}/library")

ADD_SUBDIRECTORY(${DEPDIR}/json)
ADD_SUBDIRECTORY(${DEPDIR}/jsonrpc)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w")
#SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")

SET(ALUT "alut")
SET(GLUT "glut")
SET(SDL_LIBRARY "SDL")

IF(WIN32)
  SET(LIBTYPE STATIC)
  SET(APPTYPE WIN32)
  SET(SDL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/library/SDL")
  SET(OAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/library/OpenAL")
  SET(OGL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/library/OpenGL")
  SET(PTH_DIR "${CMAKE_CURRENT_SOURCE_DIR}/library/pthreads")
  INCLUDE_DIRECTORIES(${SDL_DIR}/include)
  INCLUDE_DIRECTORIES(${OAL_DIR}/include)
  INCLUDE_DIRECTORIES(${OAL_DIR}/include/AL)
  INCLUDE_DIRECTORIES(${OGL_DIR}/include)
  INCLUDE_DIRECTORIES(${PTH_DIR}/include)
  LINK_DIRECTORIES(${SDL_DIR}/lib)
  LINK_DIRECTORIES(${OAL_DIR}/lib)
  LINK_DIRECTORIES(${OGL_DIR}/lib)
  LINK_DIRECTORIES(${PTH_DIR}/lib)
  SET(OPENAL_LIBRARY "OpenAL32")
  SET(PYTHON_INCLUDE_DIRS C:/Python27/include)
  LINK_DIRECTORIES(C:/Python27/libs)
ELSE(UNIX)
  SET(LIBTYPE SHARED)
  SET(APPTYPE "")  
  FIND_PACKAGE(SDL)
  FIND_PACKAGE(OpenAL)
  FIND_PACKAGE(PythonLibs)
  LINK_DIRECTORIES(/usr/lib)
ENDIF(WIN32)

INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${DEPDIR}/json/include)
INCLUDE_DIRECTORIES(${DEPDIR}/jsonrpc/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)

LINK_DIRECTORIES(${DEPDIR})

ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/core) 
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/coronae) 
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/samples/server)
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/samples/allegro)
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/samples/helloworld)
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/samples/pyramid)

SET(LIBRARY_OUTPUT_PATH library)

